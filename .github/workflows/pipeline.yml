# .github/workflows/pipeline.yml
name: cryptopipe-hourly

on:
  schedule:
    - cron: "5 * * * *"
  workflow_dispatch:

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Map uppercase secrets -> lowercase env your code reads
    env:
      DB_HOST:     ${{ secrets.DB_HOST }}
      DB_NAME:     ${{ secrets.DB_NAME }}
      DB_USER:     ${{ secrets.DB_USER }}
      DB_PASS:     ${{ secrets.DB_PASS }}
      DB_PORT:     ${{ secrets.DB_PORT }}
      SYMBOLS: BTC-USD, ETH-USD, XRP-USD, LTC-USD, BCH-USD, LINK-USD, ADA-USD, XLM-USD, SOL-USD, DOT-USD, MATIC-USD, DOGE-USD, AVAX-USD, TRX-USD, ATOM-USD, ETC-USD, ALGO-USD, XMR-USD, ICP-USD, NEAR-USD, FIL-USD, APT-USD, HBAR-USD, UNI-USD, AAVE-USD, MKR-USD, SNX-USD, INJ-USD, STX-USD, GRT-USD
      TRAIN_WINDOW_DAYS: "0"           
      USE_DEEP: "0"                    
      USE_PROPHET: "0"                 
      LOG_SPACE: "1"                   

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r pipeline/requirements.txt

      - name: Show connection target (sanity check)
        run: |
          python - <<'PY'
          import os
          print("CONNECT TO:", os.getenv("DB_HOST"), os.getenv("DB_NAME"), os.getenv("DB_USER"), os.getenv("DB_PORT"))
          missing = [k for k in ("DB_HOST","DB_NAME","DB_USER","DB_PORT") if not os.getenv(k)]
          if missing: raise SystemExit(f"Missing envs: {missing}")
          PY

      - name: Ingest bronze
        run: python pipeline/ingest.py
    
      - name: Ingest metrics
        run: python pipeline/ingest_metrics.py

      - name: Run transforms (silver & gold)
        run: python pipeline/run_etl.py

      - name: Generate forecast + insight
        run: python pipeline/generate_insight.py
